import React, { useCallback, useEffect, useState } from 'react';
import Faqs from './faqs';
import ApiClient from 'api';
import { Layout } from 'antd';
import Dialog from './Dialog';
import Support from './support';
import { ContentContainer } from './style';
import SweetAlert from 'components/sweetAlert';
import { useNavigate } from 'react-router-dom';
import { StyledTableHeading } from 'components/globaStyle';
const { Content } = Layout;

const Index = () => {
    const api = new ApiClient()
    const navigate = useNavigate()
    const [value, setValue] = useState(0)
    const [faqs, setFaqs] = useState(null)
    const [activeTab, setActiveTab] = useState(1)
    const [loading, setLoading] = useState(false)
    const [dialogType, setDialogType] = useState(null)
    const [dialogOpen, setDialogOpen] = useState(false)

    const getData = useCallback(async (targetedUser) => {
        const params = { targetedUser }
        try {
            setLoading(true)
            const response = await api.get('/faqs/view-all', params)
            if (response.data.status) {
                setFaqs(response.data.result.data)
            }
            setLoading(false)
        }
        catch (error) {
            setLoading(true)
            const tokenExpired = error.response?.data.message
            if (tokenExpired === 'Token expired, access denied') {
                localStorage.clear()
                navigate("/")
                return
            }
            SweetAlert('error', 'Error!', 'Something went wrong. Please try again')
            setLoading(false)
        }
    }, [])

    useEffect(() => {
        getData('DRIVER')
    }, [getData])

    return (
        <React.Fragment>
            {dialogOpen && (
                <Dialog
                    value={value}
                    open={dialogOpen}
                    getData={getData}
                    dialogType={dialogType}
                    setOpen={setDialogOpen}
                />
            )}
            <Content>
                <ContentContainer>
                    <div className='help'>
                        <div className='help_left-side'>
                            <div className='help_left-side_header'>
                                <StyledTableHeading>Help</StyledTableHeading>
                            </div>
                            <div className='help_left-side_tabs'>
                                <button
                                    type='button'
                                    onClick={() => setActiveTab(1)}
                                    className={activeTab === 1 ? 'activeTab' : ''}
                                >
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g clip-path="url(#clip0_1987_29521)">
                                            <path d="M13.0132 13.4551C12.8062 13.4551 12.6383 13.2873 12.6383 13.0802V10.3839C12.6005 10.2889 12.4727 10.0205 12.1412 9.71171C11.7501 9.34727 10.991 8.85248 9.5962 8.56495C9.53629 8.55259 9.48031 8.52577 9.43314 8.48681C9.38598 8.44786 9.34905 8.39796 9.32559 8.34147L8.91278 7.3469C8.83339 7.15566 8.92405 6.93626 9.11532 6.85687C9.30665 6.77752 9.52602 6.86821 9.60535 7.05945L9.94297 7.87289C12.9131 8.54908 13.3586 10.1589 13.3764 10.2286C13.3842 10.259 13.3881 10.2903 13.3881 10.3217V13.0802C13.3882 13.2872 13.2203 13.4551 13.0132 13.4551ZM2.98822 13.4551C2.78113 13.4551 2.61328 13.2873 2.61328 13.0802V10.3216C2.61328 10.2902 2.61722 10.2589 2.62502 10.2285C2.64288 10.1589 3.08831 8.54902 6.05843 7.87283L6.39608 7.0594C6.47546 6.86815 6.69489 6.77754 6.8861 6.85682C7.07738 6.9362 7.16807 7.1556 7.08865 7.34685L6.67584 8.34142C6.65238 8.39791 6.61546 8.44781 6.56829 8.48677C6.52113 8.52572 6.46515 8.55254 6.40523 8.56489C5.0104 8.85245 4.25135 9.34721 3.86022 9.71166C3.52877 10.0205 3.40098 10.2888 3.36315 10.3839V13.0801C3.36318 13.2872 3.1953 13.4551 2.98822 13.4551Z" fill="#4B5563" />
                                            <path d="M8.00087 7.97994C6.70643 7.97994 5.28341 6.9489 5.01463 4.6463C4.61323 2.84009 5.06279 1.3422 6.24963 0.534579C7.29712 -0.178193 8.70467 -0.178193 9.75213 0.534579C10.939 1.3422 11.3885 2.84009 10.9871 4.6463C10.7183 6.9489 9.29531 7.97994 8.00087 7.97994ZM8.00087 0.755093C7.53185 0.755093 7.06285 0.88826 6.6715 1.15457C5.74841 1.78271 5.41277 3.00255 5.75061 4.50131C5.75363 4.51457 5.75588 4.52799 5.7574 4.5415C5.96803 6.39875 7.03595 7.23007 8.00087 7.23007C8.96579 7.23007 10.0337 6.39875 10.2443 4.5415C10.2459 4.52799 10.2481 4.51457 10.2511 4.50131C10.589 3.00255 10.2533 1.78271 9.33023 1.15457C8.93888 0.88826 8.46986 0.755093 8.00087 0.755093Z" fill="#4B5563" />
                                            <path d="M5.32586 4.6224C5.3139 4.6224 5.30189 4.62183 5.28976 4.62068C5.08363 4.60098 4.93247 4.41792 4.95217 4.21175C5.02683 3.43033 5.40448 2.87459 6.07458 2.56002C6.54877 2.33744 7.16367 2.2384 8.00899 2.24878C8.53644 2.25517 9.30846 2.29672 9.92026 2.58293C10.5957 2.89891 10.9753 3.44694 11.0484 4.21178C11.0681 4.41792 10.9169 4.60098 10.7108 4.62068C10.5049 4.64055 10.3216 4.48923 10.3019 4.28309C10.2165 3.38951 9.54957 3.01738 7.99991 2.99862C6.4537 2.98039 5.78762 3.35201 5.69864 4.28309C5.68011 4.47708 5.51683 4.6224 5.32586 4.6224ZM8.00029 10.5158C7.9211 10.5158 7.8419 10.4908 7.77524 10.4408L5.41282 8.66802C5.24721 8.54371 5.21367 8.30869 5.33798 8.14307C5.46226 7.97743 5.69726 7.94394 5.86293 8.0682L8.00029 9.6721L10.1377 8.0682C10.3032 7.94389 10.5383 7.9774 10.6626 8.14307C10.7869 8.30869 10.7534 8.54371 10.5878 8.66802L8.22534 10.4408C8.16044 10.4895 8.08146 10.5159 8.00029 10.5158ZM8.00029 15.9994C5.71661 15.9994 3.92773 14.9482 3.92773 13.6062C3.92773 12.2642 5.71661 11.213 8.00029 11.213C10.284 11.213 12.0728 12.2642 12.0728 13.6062C12.0728 14.9482 10.2839 15.9994 8.00029 15.9994ZM8.00029 11.963C7.07432 11.963 6.20957 12.1566 5.56534 12.5083C5.0012 12.8162 4.67763 13.2164 4.67763 13.6063C4.67763 13.9961 5.0012 14.3963 5.56534 14.7043C6.20957 15.0559 7.07434 15.2496 8.00029 15.2496C8.92624 15.2496 9.79101 15.0559 10.4353 14.7043C10.9994 14.3963 11.323 13.9961 11.323 13.6063C11.323 13.2164 10.9994 12.8162 10.4352 12.5083C9.79101 12.1566 8.92624 11.963 8.00029 11.963Z" fill="#4B5563" />
                                            <path d="M8.0021 14.6682C7.15978 14.6682 6.5 14.2015 6.5 13.6056C6.5 13.0097 7.1598 12.543 8.0021 12.543C8.8444 12.543 9.5042 13.0097 9.5042 13.6056C9.5042 14.2015 8.8444 14.6682 8.0021 14.6682ZM8.0021 13.2929C7.51349 13.2929 7.24987 13.5148 7.24987 13.6056C7.24987 13.6964 7.51346 13.9183 8.0021 13.9183C8.49074 13.9183 8.75433 13.6964 8.75433 13.6056C8.75431 13.5148 8.49072 13.2929 8.0021 13.2929Z" fill="#4B5563" />
                                            <path d="M8.00002 13.2953C7.79293 13.2953 7.62509 13.1275 7.62509 12.9204V11.5898C7.62509 11.3827 7.79296 11.2148 8.00002 11.2148C8.20711 11.2148 8.37498 11.3827 8.37498 11.5898V12.9204C8.37498 13.1274 8.20708 13.2953 8.00002 13.2953ZM10.9217 15.2201C10.873 15.2201 10.8234 15.2105 10.7757 15.1903L8.77989 14.3454C8.58922 14.2646 8.50005 14.0446 8.58079 13.8539C8.66153 13.6632 8.88164 13.5742 9.07226 13.6548L11.0681 14.4998C11.2587 14.5805 11.3479 14.8005 11.2672 14.9912C11.2066 15.1342 11.0677 15.2201 10.9217 15.2201ZM5.07833 15.2201C4.93225 15.2201 4.7934 15.1342 4.73288 14.9912C4.65217 14.8005 4.74131 14.5805 4.93201 14.4998L6.92778 13.6548C7.11845 13.5741 7.33848 13.6632 7.41922 13.8539C7.49996 14.0446 7.41082 14.2646 7.22012 14.3454L5.22435 15.1903C5.17817 15.21 5.12851 15.2201 5.07833 15.2201Z" fill="#4B5563" />
                                        </g>
                                        <defs>
                                            <clipPath id="clip0_1987_29521">
                                                <rect width="16" height="16" fill="white" />
                                            </clipPath>
                                        </defs>
                                    </svg>
                                    <span>FAQ's</span>
                                </button>

                                <button
                                    type='button'
                                    onClick={() => setActiveTab(2)}
                                    className={activeTab === 2 ? 'activeTab' : ''}
                                >
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M11.4375 12.375C11.265 12.375 11.125 12.515 11.125 12.6875C11.125 12.86 11.265 13 11.4375 13C11.61 13 11.75 12.86 11.75 12.6875C11.75 12.515 11.61 12.375 11.4375 12.375Z" fill="#4B5563" />
                                        <path d="M12.2069 11.3645L10.7216 10.8695L10.1884 9.803C10.6688 9.31406 11.0023 8.66712 11.1148 7.99234L11.1813 7.59375H11.75C12.2669 7.59375 12.6875 7.17319 12.6875 6.65625V4.6875C12.6875 2.10281 10.5847 0 8 0C5.40869 0 3.3125 2.09678 3.3125 4.6875V6.65625C3.3125 7.06362 3.57378 7.411 3.9375 7.54V7.90625C3.9375 8.42319 4.35806 8.84375 4.875 8.84375H5.14944C5.28452 9.13795 5.46104 9.41129 5.67362 9.65544C5.71797 9.70624 5.76389 9.75565 5.81131 9.80359L5.27838 10.8695L3.79303 11.3645C2.066 11.9404 0.8125 13.7585 0.8125 15.6875C0.8125 15.8601 0.952406 16 1.125 16H14.875C15.0476 16 15.1875 15.8601 15.1875 15.6875C15.1875 13.7585 13.934 11.9404 12.2069 11.3645ZM12.0625 6.65625C12.0625 6.82856 11.9223 6.96875 11.75 6.96875H11.2731C11.3525 6.35344 11.4054 5.69866 11.4267 5.05375C11.4273 5.03556 11.4278 5.01788 11.4284 5H12.0625V6.65625ZM4.25 6.96875C4.07769 6.96875 3.9375 6.82856 3.9375 6.65625V5H4.57181C4.57284 5.03259 4.57394 5.06534 4.57516 5.09831L4.57528 5.10166V5.10194C4.59716 5.72919 4.64941 6.36697 4.72703 6.96872H4.25V6.96875ZM4.875 8.21875C4.70269 8.21875 4.5625 8.07856 4.5625 7.90625V7.59375H4.81869L4.88519 7.99247C4.89798 8.06841 4.91343 8.14389 4.9315 8.21875H4.875ZM4.56303 4.375H3.94937C4.10766 2.28059 5.85553 0.625 8 0.625C10.1349 0.625 11.8905 2.28038 12.0506 4.375H11.437C11.4145 2.64916 10.0091 1.25 8.27972 1.25H7.72034C5.991 1.25 4.5855 2.64916 4.56303 4.375ZM7.72031 1.875H8.27969C9.67997 1.875 10.8133 3.02034 10.8125 4.41906C10.8125 4.51741 10.8117 4.60303 10.8101 4.68094L10.81 4.684L10.4192 4.62816C9.35728 4.47653 8.35466 3.97522 7.59597 3.21653C7.53736 3.15793 7.45788 3.12501 7.375 3.125C6.53575 3.125 5.73238 3.50738 5.20131 4.15338C5.33219 2.88091 6.40791 1.875 7.72031 1.875ZM5.57937 8.21875C5.42294 7.69834 5.24394 6.16709 5.20437 5.18584L5.62497 4.62503C6.01125 4.11016 6.61222 3.79025 7.2515 3.75353C8.09266 4.55403 9.18084 5.08266 10.3308 5.24684L10.7908 5.31259C10.7601 5.96525 10.6973 6.62019 10.6072 7.22253L10.6071 7.22316C10.5785 7.41681 10.5559 7.54144 10.4983 7.88953C10.3328 8.88219 9.59212 9.77984 8.61434 10.0243C8.21099 10.1248 7.78916 10.1248 7.38581 10.0243C6.77528 9.87169 6.21547 9.44925 5.85419 8.84375H6.49125C6.62025 9.20747 6.96759 9.46875 7.375 9.46875H8C8.51797 9.46875 8.9375 9.04925 8.9375 8.53125C8.9375 8.01431 8.51694 7.59375 8 7.59375H7.375C6.95853 7.59375 6.61631 7.86275 6.49072 8.21875H5.57937ZM7.34872 10.6567C7.56286 10.702 7.78113 10.7249 8 10.725C8.17097 10.725 8.34197 10.7107 8.51103 10.6829L7.95884 11.2669L7.34872 10.6567ZM7.52922 11.7212L6.53803 12.7694C6.26495 12.2467 6.03109 11.7044 5.83838 11.147L6.21059 10.4026L7.52922 11.7212ZM9.73644 10.2967L10.1616 11.147C9.96885 11.7045 9.73496 12.247 9.46181 12.7699L8.40094 11.709L9.73644 10.2967ZM7.0625 8.53125C7.0625 8.35872 7.20244 8.21875 7.375 8.21875H8C8.17231 8.21875 8.3125 8.35894 8.3125 8.53125C8.3125 8.70381 8.17253 8.84375 8 8.84375H7.375C7.20269 8.84375 7.0625 8.70356 7.0625 8.53125ZM1.45 15.375C1.57384 13.8269 2.60413 12.4198 3.99069 11.9574L5.30613 11.519C5.54745 12.1862 5.84501 12.8316 6.19559 13.4484L6.19734 13.4516L6.19737 13.4516C6.45507 13.9044 6.74075 14.3406 7.05275 14.7578L7.43719 15.375H1.45ZM8 15.0964L7.57619 14.416C7.57144 14.4084 7.56637 14.401 7.561 14.3938C7.30782 14.0559 7.07278 13.7047 6.85687 13.3419L7.97134 12.1633L9.14566 13.3376C8.9291 13.702 8.69323 14.0545 8.43906 14.3938C8.42375 14.4142 8.44547 14.382 8 15.0964ZM8.56281 15.375L8.94722 14.7579C9.26165 14.3375 9.54934 13.8977 9.80859 13.4412C9.81016 13.4385 9.81163 13.4357 9.81319 13.4329L9.81375 13.4319C10.1603 12.8202 10.4547 12.1803 10.6939 11.519L12.0093 11.9574C13.3959 12.4198 14.4262 13.8269 14.55 15.375H8.56281Z" fill="#4B5563" />
                                        <path d="M13.6104 14.1095C13.4015 13.6915 13.0956 13.3201 12.7257 13.0356C12.5889 12.9303 12.3927 12.9559 12.2875 13.0927C12.1822 13.2295 12.2078 13.4257 12.3446 13.5309C12.6401 13.7582 12.8844 14.0549 13.0512 14.3888C13.1285 14.5435 13.3163 14.6058 13.4704 14.5288C13.6248 14.4516 13.6875 14.2639 13.6104 14.1095Z" fill="#4B5563" />
                                    </svg>
                                    <span>Support</span>
                                </button>
                            </div>
                        </div>

                        <div className='help_content'>
                            <div className='help_content_tabsPanel'>
                                {activeTab === 1 && (
                                    <Faqs
                                        faqs={faqs}
                                        value={value}
                                        getData={getData}
                                        loading={loading}
                                        setValue={setValue}
                                    />
                                )}
                                {activeTab === 2 && <Support />}
                            </div>
                            {activeTab === 1 && (
                                <div className='add-btn'>
                                    <button
                                        type='button'
                                        onClick={() => {
                                            setDialogOpen(true)
                                            setDialogType('add')
                                        }}
                                    >
                                        Add
                                    </button>
                                </div>
                            )}
                        </div>
                    </div>
                </ContentContainer>
            </Content>
        </React.Fragment>
    )
}

export default Index